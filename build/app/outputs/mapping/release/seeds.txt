androidx.window.java.R
io.flutter.view.AccessibilityViewEmbedder
com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.core.app.RemoteActionCompat
com.google.firebase.crashlytics.CrashlyticsRegistrar
androidx.window.R$id
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.appcompat.view.menu.ListMenuItemView
androidx.window.layout.ActivityCompatHelperApi30
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.core.app.FrameMetricsAggregator
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
com.google.firebase.perf.session.gauges.GaugeManager
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar
com.google.android.gms.measurement.AppMeasurement
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.embedding.SplitPlaceholderRule
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.appcompat.widget.Toolbar
androidx.window.embedding.EmbeddingRule
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.appcompat.widget.ViewStubCompat
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.embedding.SplitPairRule
androidx.window.layout.SidecarCompat
com.google.firebase.perf.network.FirebasePerfOkHttpClient
androidx.window.layout.DisplayFeature
androidx.appcompat.widget.ActionBarContextView
com.google.firebase.components.ComponentRegistrar
com.google.firebase.perf.metrics.Trace
androidx.window.layout.WindowMetricsCalculator
com.google.firebase.perf.metrics.AppStartTrace
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.datatransport.cct.CctBackendFactory
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
androidx.window.layout.FoldingFeature$State
androidx.window.layout.SidecarWindowBackend
com.google.firebase.datatransport.TransportRegistrar
com.google.firebase.components.ComponentDiscoveryService
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar
androidx.window.R$attr
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash
com.google.firebase.remoteconfig.RemoteConfigRegistrar
androidx.window.layout.WindowMetricsCalculatorDecorator
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.window.layout.ExtensionInterfaceCompat
androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.WindowBackend
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.HardwareFoldingFeature$Type$Companion
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
androidx.window.embedding.EmptyEmbeddingComponent
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.core.Version
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
androidx.activity.ImmLeaksCleaner
androidx.window.layout.WindowInfoTracker$Companion
com.google.firebase.perf.network.FirebasePerfUrlConnection
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.activity.ComponentActivity$3
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar
com.google.firebase.sessions.SessionLifecycleService
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.embedding.SplitRule
com.google.firebase.concurrent.ExecutorsRegistrar
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
androidx.window.R$styleable
androidx.window.core.ExperimentalWindowApi
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.lifecycle.SingleGeneratedAdapterObserver
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.embedding.EmbeddingBackend
io.flutter.plugin.platform.SingleViewPresentation
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.embedding.SplitPairFilter
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.appcompat.widget.ActionMenuView
com.google.android.gms.common.internal.ReflectedParcelable
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.appcompat.widget.ContentFrameLayout
androidx.core.widget.NestedScrollView
io.flutter.view.TextureRegistry$ImageTextureEntry
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar
androidx.window.layout.EmptyDecorator
androidx.window.embedding.SplitRule$Api30Impl
androidx.appcompat.widget.SearchView
androidx.appcompat.widget.DialogTitle
androidx.window.embedding.ActivityRule
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
androidx.appcompat.app.AlertController$RecycleListView
androidx.window.layout.SidecarAdapter
com.google.android.gms.measurement.AppMeasurementJobService
com.google.firebase.perf.FirebasePerfRegistrar
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.window.embedding.EmbeddingTranslatingCallback
com.google.firebase.abt.component.AbtRegistrar
com.example.dawn.MainActivity
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.fragment.app.Fragment$2
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.core.graphics.drawable.IconCompatParcelizer
dev.fluttercommunity.plus.share.SharePlusPendingIntent
com.google.android.gms.common.util.DynamiteApi
androidx.versionedparcelable.ParcelImpl
androidx.window.embedding.ExtensionEmbeddingBackend
com.google.android.gms.common.annotation.KeepName
com.google.firebase.perf.FirebasePerfKtxRegistrar
androidx.window.layout.HardwareFoldingFeature
androidx.window.core.Bounds
androidx.appcompat.widget.ActionBarContainer
androidx.lifecycle.ProcessLifecycleOwnerInitializer
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.embedding.SplitInfo
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.firebase.FirebaseCommonRegistrar
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
dev.fluttercommunity.plus.share.ShareFileProvider
androidx.window.layout.DisplayCompatHelperApi17
com.google.firebase.FirebaseCommonKtxRegistrar
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.layout.FoldingFeature$Orientation
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.SplitRuleParser
androidx.core.app.CoreComponentFactory
androidx.window.embedding.SplitRule$LayoutDir
androidx.annotation.Keep
androidx.window.layout.SidecarCompat$Companion
androidx.core.graphics.drawable.IconCompat
androidx.window.R
androidx.window.embedding.ActivityFilter
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.window.layout.WindowMetrics
androidx.window.layout.FoldingFeature
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.EmbeddingCompat
androidx.savedstate.SavedStateRegistry$1
com.google.android.gms.common.api.Scope
androidx.appcompat.widget.AlertDialogLayout
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.gms.measurement.AppMeasurementService
androidx.window.embedding.ActivityStack
com.google.firebase.sessions.FirebaseSessionsRegistrar
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar
androidx.window.layout.SidecarAdapter$Companion
io.flutter.embedding.engine.FlutterJNI
io.flutter.app.FlutterMultiDexApplication
androidx.window.layout.WindowInfoTracker
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.embedding.SplitController$Companion
androidx.window.layout.SidecarWindowBackend$Companion
androidx.activity.ComponentActivity$2
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.google.firebase.perf.network.FirebasePerfHttpClient
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.FoldingFeature$OcclusionType
io.flutter.view.FlutterCallbackInformation
androidx.lifecycle.Lifecycling$1
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.window.embedding.MatcherUtils
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
io.flutter.plugins.firebase.crashlytics.FlutterError
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.savedstate.Recreator
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.window.core.Version$Companion
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.WindowLayoutInfo
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.appcompat.widget.ButtonBarLayout
androidx.window.layout.ActivityCompatHelperApi24
com.google.firebase.perf.session.SessionManager
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar
android.support.v4.app.RemoteActionCompatParcelizer
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.embedding.SplitController
androidx.appcompat.view.menu.ExpandedMenuView
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
com.google.firebase.provider.FirebaseInitProvider
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.window.embedding.EmbeddingAdapter
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.FoldingFeature$Orientation$Companion
com.google.firebase.analytics.FirebaseAnalytics
androidx.window.layout.HardwareFoldingFeature$Companion
com.google.firebase.perf.config.RemoteConfigManager
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.android.gms.internal.measurement.zzfc$zzb: com.google.android.gms.internal.measurement.zzfc$zzb zzc
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfi$zzn: double zzk
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.NetworkRequestMetric networkRequestMetric_
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.firebase.perf.v1.GaugeMetadata: int DEVICE_RAM_SIZE_KB_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzjf zzj
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeMetadataManager gaugeMetadataManager
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.PerfSession perfSession
com.google.firebase.perf.v1.GaugeMetric: int CPU_METRIC_READINGS_FIELD_NUMBER
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.internal.measurement.zzfc$zza$zzf: int zze
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzg
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.android.gms.internal.measurement.zzfp$zzd: com.google.android.gms.internal.measurement.zzfp$zzd zzc
com.google.android.gms.internal.measurement.zzfc$zza$zzf: com.google.android.gms.internal.measurement.zzfc$zza$zzf zzc
com.google.android.gms.internal.measurement.zzew$zze: com.google.android.gms.internal.measurement.zzew$zzc zzh
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.PerfMetric DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzy
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.firebase.perf.v1.CpuMetricReading: long userTimeUs_
com.google.firebase.perf.v1.NetworkRequestMetric: int RESPONSE_CONTENT_TYPE_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.android.gms.internal.measurement.zzfc$zzc: com.google.android.gms.internal.measurement.zzkw zzd
com.google.firebase.perf.v1.ApplicationInfo: int GOOGLE_APP_ID_FIELD_NUMBER
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.v1.ApplicationProcessState applicationProcessState
com.google.android.gms.internal.measurement.zzfc$zze: int zzg
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.measurement.zzfc$zzg: int zze
com.google.android.gms.internal.measurement.zzfc$zzb: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzaz
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.SessionManager instance
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.measurement.internal.zzbg: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.measurement.zzew$zzc: com.google.android.gms.internal.measurement.zzew$zzd zzg
com.google.firebase.perf.v1.CpuMetricReading: int CLIENT_TIME_US_FIELD_NUMBER
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
com.google.android.gms.internal.measurement.zzfc$zzb: int zze
com.google.android.gms.internal.measurement.zzew$zza: com.google.android.gms.internal.measurement.zzjf zzh
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzfi$zzh zzbc
com.google.android.gms.internal.measurement.zzfi$zzj: long zzan
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.MapFieldLite counters_
com.google.android.gms.internal.measurement.zzfi$zzg: long zzh
com.google.firebase.perf.config.RemoteConfigManager: long MIN_APP_START_CONFIG_FETCH_DELAY_MS
androidx.window.R$styleable: int[] ActivityFilter
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.android.gms.internal.measurement.zzfi$zzi: com.google.android.gms.internal.measurement.zzkw zzd
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.firebase.perf.config.RemoteConfigManager: int RANDOM_APP_START_CONFIG_FETCH_DELAY_MS
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzjf zzag
androidx.window.core.Bounds: int bottom
com.google.firebase.perf.v1.AndroidMemoryReading: int CLIENT_TIME_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzn: int zze
com.google.android.gms.internal.measurement.zzfi$zzh: java.lang.String zzg
com.google.android.gms.internal.measurement.zzew$zze: boolean zzk
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
com.google.android.gms.internal.measurement.zzfi$zzi: java.lang.String zzg
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Parser PARSER
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.window.R$attr: int splitMinWidth
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
com.google.android.gms.internal.measurement.zzfc$zzc: int zze
com.google.firebase.perf.v1.TraceMetric: int NAME_FIELD_NUMBER
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.android.gms.internal.measurement.zzew$zzb: com.google.android.gms.internal.measurement.zzew$zzd zzj
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Internal$ProtobufList subtraces_
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzz
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzaf
com.google.android.gms.internal.measurement.zzfi$zzd: int zze
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzg
com.google.android.gms.internal.measurement.zzew$zzc: int zze
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.android.gms.internal.measurement.zzfc$zzf: com.google.android.gms.internal.measurement.zzkw zzd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.measurement.zzfi$zzf: long zzg
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.google.android.gms.internal.measurement.zzfc$zze: int zzh
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.firebase.perf.v1.NetworkRequestMetric: java.lang.String responseContentType_
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Internal$IntList sessionVerbosity_
com.google.android.gms.internal.measurement.zzew$zzb: com.google.android.gms.internal.measurement.zzjf zzh
com.google.android.gms.internal.measurement.zzfp$zza: com.google.android.gms.internal.measurement.zzkw zzd
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.internal.measurement.zzfc$zzf: java.lang.String zzg
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.MapFieldLite customAttributes_
com.google.android.gms.measurement.internal.zzo: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.window.R$attr: int clearTop
com.google.android.gms.internal.measurement.zzfi$zzg: com.google.android.gms.internal.measurement.zzfi$zzg zzc
androidx.window.R$attr: int activityName
com.google.android.gms.internal.measurement.zzix: java.util.Map zzc
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.internal.measurement.zzfi$zzj: int zzaj
com.google.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.google.firebase.perf.v1.CpuMetricReading: int SYSTEM_TIME_US_FIELD_NUMBER
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.firebase.perf.session.gauges.GaugeManager: java.lang.String sessionId
com.google.android.gms.internal.measurement.zzfc$zzf: int zze
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionFirelogPublisher
com.google.android.gms.internal.measurement.zzew$zza: com.google.android.gms.internal.measurement.zzew$zza zzc
com.google.android.gms.internal.measurement.zzfp$zzb: java.lang.String zzf
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.google.android.gms.internal.measurement.zzfc$zza$zzc: com.google.android.gms.internal.measurement.zzfc$zza$zzc zzc
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.google.firebase.perf.v1.ApplicationInfo: int APPLICATION_PROCESS_STATE_FIELD_NUMBER
androidx.window.R$attr: int alwaysExpand
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.firebase.perf.config.RemoteConfigManager: java.lang.String FIREPERF_FRC_NAMESPACE_NAME
com.google.firebase.perf.session.gauges.GaugeManager: java.util.concurrent.ScheduledFuture gaugeManagerDataCollectionJob
androidx.window.R$attr: int splitMinSmallestWidth
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.firebase.perf.v1.GaugeMetadata: int CPU_CLOCK_RATE_KHZ_FIELD_NUMBER
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessionsRegistrar$Companion Companion
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener imeVisibleListener
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzk
com.google.firebase.perf.v1.GaugeMetric: com.google.firebase.perf.v1.GaugeMetadata gaugeMetadata_
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.google.android.gms.internal.measurement.zzfi$zzj: int zzak
com.google.android.gms.measurement.internal.zzbb: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzf
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.google.android.gms.internal.measurement.zzfc$zzd: long zzf
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzfc$zza zzt
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzjg zze
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.android.gms.internal.measurement.zzew$zze: com.google.android.gms.internal.measurement.zzkw zzd
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.google.firebase.perf.v1.PerfMetric: int NETWORK_REQUEST_METRIC_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzl
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.internal.measurement.zzew$zzf: int zze
androidx.window.R$attr: int splitLayoutDirection
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzjd zzat
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzr
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzo
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.gms.internal.measurement.zzfc$zza$zzb: int zze
com.google.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
com.google.firebase.perf.v1.PerfMetric: int GAUGE_METRIC_FIELD_NUMBER
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.google.android.gms.internal.measurement.zzfi$zzc: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfi$zzi: com.google.android.gms.internal.measurement.zzjf zzf
com.google.android.gms.internal.measurement.zzfi$zzj: long zzx
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.measurement.zzfi$zzm: com.google.android.gms.internal.measurement.zzjg zzg
com.google.firebase.perf.v1.PerfSession: int SESSION_ID_FIELD_NUMBER
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
com.google.firebase.perf.FirebasePerfRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfp$zzc: int zze
com.google.firebase.perf.v1.AndroidApplicationInfo: int PACKAGE_NAME_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzew$zzd: boolean zzg
com.google.android.gms.internal.measurement.zzfi$zzf: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.google.android.gms.internal.measurement.zzew$zzd: int zzf
com.google.firebase.perf.v1.NetworkRequestMetric: java.lang.String url_
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.ApplicationInfo applicationInfo_
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.android.gms.internal.measurement.zzfi$zzj: long zzw
androidx.window.R$attr: int primaryActivityName
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.window.R$id: int rtl
com.google.firebase.perf.session.gauges.GaugeManager: long INVALID_GAUGE_COLLECTION_FREQUENCY
com.google.firebase.perf.v1.NetworkRequestMetric: long clientStartTimeUs_
com.google.firebase.perf.v1.AndroidMemoryReading: int usedAppJavaHeapMemoryKb_
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.firebase.perf.v1.NetworkRequestMetric DEFAULT_INSTANCE
com.google.firebase.perf.config.RemoteConfigManager: long FETCH_NEVER_HAPPENED_TIMESTAMP_MS
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToResponseCompletedUs_
com.google.android.gms.internal.measurement.zzfp$zzc: com.google.android.gms.internal.measurement.zzkw zzd
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
androidx.window.core.Bounds: int left
com.google.firebase.perf.v1.PerfMetric: int TRANSPORT_INFO_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzi
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified backgroundDispatcher
com.google.android.gms.internal.measurement.zzfi$zze: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar$Companion Companion
com.google.android.gms.internal.measurement.zzfi$zzg: double zzj
com.google.firebase.perf.v1.ApplicationInfo: java.lang.String appInstanceId_
com.google.firebase.perf.v1.AndroidApplicationInfo: com.google.protobuf.Parser PARSER
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.measurement.zzfi$zzj: long zzm
com.google.firebase.perf.v1.CpuMetricReading: int bitField0_
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String sdkVersion_
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzao
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzv
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzjg zzf
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.google.firebase.perf.v1.NetworkRequestMetric: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.remoteconfig.FirebaseRemoteConfig firebaseRemoteConfig
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_RESPONSE_COMPLETED_US_FIELD_NUMBER
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Internal$ProtobufList androidMemoryReadings_
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int[] ActivityRule
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzba
com.google.android.gms.internal.measurement.zzfp$zzb: com.google.android.gms.internal.measurement.zzfp$zzb zzc
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.android.gms.internal.measurement.zzfi$zzn: com.google.android.gms.internal.measurement.zzkw zzd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzew$zzb: boolean zzl
com.google.android.gms.internal.measurement.zzfc$zzg: java.lang.String zzg
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.RemoteConfigManager instance
com.google.android.gms.internal.measurement.zzfi$zzh: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfi$zzb: int zze
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.window.embedding.SplitController: boolean sDebug
com.google.android.gms.internal.measurement.zzfp$zzd: double zzk
com.google.android.gms.internal.measurement.zzfi$zze: long zzh
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
androidx.window.embedding.SplitRule: int minSmallestWidth
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.gms.internal.measurement.zzfp$zza: com.google.android.gms.internal.measurement.zzfp$zza zzc
com.google.android.gms.internal.measurement.zzfi$zzj: long zzk
com.google.firebase.perf.v1.PerfSession: int SESSION_VERBOSITY_FIELD_NUMBER
com.google.firebase.perf.v1.TraceMetric: int DURATION_US_FIELD_NUMBER
com.google.firebase.perf.v1.GaugeMetadata: int maxAppJavaHeapMemoryKb_
com.google.android.gms.internal.measurement.zzew$zze: java.lang.String zzg
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.android.gms.internal.measurement.zzfp$zzd: java.lang.String zzh
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.internal.measurement.zzfc$zzc: com.google.android.gms.internal.measurement.zzfc$zzc zzc
com.google.firebase.perf.config.RemoteConfigManager: java.util.concurrent.ConcurrentHashMap allRcConfigMap
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.google.android.gms.internal.measurement.zzdd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzew$zzd: java.lang.String zzi
com.google.firebase.perf.v1.TraceMetric: int COUNTERS_FIELD_NUMBER
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
com.google.android.gms.internal.measurement.zzfi$zzg: int zze
com.google.android.gms.internal.measurement.zzfc$zzb: boolean zzh
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.firebase.perf.v1.TraceMetric: long clientStartTimeUs_
com.google.android.gms.internal.measurement.zzfi$zzd: long zzg
com.google.android.gms.internal.measurement.zzew$zze: int zze
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzap
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.android.gms.internal.measurement.zzew$zze: com.google.android.gms.internal.measurement.zzew$zze zzc
com.google.android.gms.internal.measurement.zzfc$zza$zzb: int zzg
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.firebase.perf.config.RemoteConfigManager: long firebaseRemoteConfigLastFetchTimestampMs
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.google.firebase.perf.v1.GaugeMetadata: int maxEncouragedAppJavaHeapMemoryKb_
com.google.android.gms.internal.measurement.zzfi$zzj: int zzs
com.google.firebase.perf.metrics.Trace: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: int minor
com.google.android.gms.internal.measurement.zzfi$zzj: long zzj
androidx.window.R$attr: int secondaryActivityName
com.google.android.gms.internal.measurement.zzfp$zzc: com.google.android.gms.internal.measurement.zzjf zzf
com.google.android.gms.internal.measurement.zzew$zzf: com.google.android.gms.internal.measurement.zzew$zzf zzc
com.google.android.gms.internal.measurement.zzfi$zzg: com.google.android.gms.internal.measurement.zzjf zzk
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.firebase.perf.v1.NetworkRequestMetric: int HTTP_METHOD_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzew$zzd: com.google.android.gms.internal.measurement.zzew$zzd zzc
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzh
com.google.android.gms.internal.measurement.zzhd: int zza
com.google.firebase.remoteconfig.RemoteConfigRegistrar: java.lang.String LIBRARY_NAME
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.android.gms.internal.measurement.zzfc$zza$zzb: com.google.android.gms.internal.measurement.zzfc$zza$zzb zzc
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzjf zzh
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzjf zzo
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.Internal$ProtobufList perfSessions_
com.google.android.gms.internal.measurement.zzfi$zzh: java.lang.String zzf
com.google.firebase.perf.v1.NetworkRequestMetric: int RESPONSE_PAYLOAD_BYTES_FIELD_NUMBER
com.google.firebase.perf.v1.TraceMetric: int bitField0_
com.google.android.gms.internal.measurement.zzfp$zzc: com.google.android.gms.internal.measurement.zzfp$zzc zzc
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.android.gms.internal.measurement.zzew$zza: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzew$zzf: com.google.android.gms.internal.measurement.zzjf zzi
com.google.firebase.perf.v1.ApplicationInfo: int APP_INSTANCE_ID_FIELD_NUMBER
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.TraceMetric traceMetric_
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzp
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionGenerator
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzfi$zzj zzc
com.google.android.gms.internal.measurement.zzfc$zze: com.google.android.gms.internal.measurement.zzfc$zze zzc
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified transportFactory
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy memoryGaugeCollector
com.google.android.gms.internal.measurement.zzfp$zzb: int zze
com.google.android.gms.internal.measurement.zzfi$zzj: long zzab
com.google.firebase.perf.v1.GaugeMetric: int SESSION_ID_FIELD_NUMBER
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfc$zzd: boolean zzm
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String packageName_
com.google.firebase.perf.v1.CpuMetricReading: int USER_TIME_US_FIELD_NUMBER
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.TransportInfo transportInfo_
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.window.R$attr: int splitRatio
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Parser PARSER
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.R$styleable: int[] SplitPairRule
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.android.gms.internal.measurement.zzfi$zzg: float zzi
com.google.android.gms.measurement.internal.zzad: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfi$zzc: com.google.android.gms.internal.measurement.zzfi$zzc zzc
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.android.gms.internal.measurement.zzew$zzb: com.google.android.gms.internal.measurement.zzew$zzb zzc
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.google.firebase.perf.v1.PerfMetric: int TRACE_METRIC_FIELD_NUMBER
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.firebase.perf.v1.TraceMetric: int CLIENT_START_TIME_US_FIELD_NUMBER
com.google.firebase.perf.v1.TraceMetric: int SUBTRACES_FIELD_NUMBER
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.firebase.perf.v1.GaugeMetric: int GAUGE_METADATA_FIELD_NUMBER
com.google.firebase.perf.v1.ApplicationInfo: com.google.protobuf.MapFieldLite customAttributes_
com.google.firebase.perf.v1.GaugeMetadata: java.lang.String processName_
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int ActivityFilter_activityAction
com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zzlz zzb
com.google.android.gms.internal.measurement.zzfi$zzc: com.google.android.gms.internal.measurement.zzfi$zzl zzh
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.google.firebase.perf.v1.NetworkRequestMetric: int CLIENT_START_TIME_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzew$zza: com.google.android.gms.internal.measurement.zzjf zzg
com.google.android.gms.internal.measurement.zzfc$zzf: com.google.android.gms.internal.measurement.zzfc$zzf zzc
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.android.gms.internal.measurement.zzfi$zzc: boolean zzi
com.google.firebase.perf.v1.NetworkRequestMetric: long requestPayloadBytes_
com.google.android.gms.internal.measurement.zzew$zzd: int zze
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.Parser PARSER
com.google.firebase.perf.v1.TraceMetric: int IS_AUTO_FIELD_NUMBER
androidx.window.core.Version: int major
com.google.android.gms.internal.measurement.zzfi$zzj: int zzg
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.android.gms.internal.measurement.zzfi$zzc: int zzf
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionsSettings
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzfi$zze: int zzj
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.firebase.perf.v1.AndroidMemoryReading: long clientTimeUs_
com.google.firebase.perf.v1.CpuMetricReading: long clientTimeUs_
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.measurement.zzew$zza: int zzf
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzae
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.internal.measurement.zzfc$zzf: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.android.gms.internal.measurement.zzfi$zze: long zzi
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.google.android.gms.internal.measurement.zzfi$zzk: com.google.android.gms.internal.measurement.zzjf zzg
io.flutter.embedding.engine.FlutterJNI: float displayDensity
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzj
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.application.AppStateMonitor appStateMonitor
com.google.android.gms.internal.measurement.zzfi$zzd: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfc$zzc: int zzi
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
com.google.firebase.perf.v1.AndroidMemoryReading: int bitField0_
com.google.android.gms.internal.measurement.zzew$zza: boolean zzi
com.google.android.gms.internal.measurement.zzfi$zzj: long zzam
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzaw
com.google.android.gms.internal.measurement.zzfi$zzb: com.google.android.gms.internal.measurement.zzkw zzd
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy gaugeManagerExecutor
com.google.android.gms.internal.measurement.zzfc$zzg: com.google.android.gms.internal.measurement.zzfc$zzg zzc
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzew$zzc: com.google.android.gms.internal.measurement.zzew$zzc zzc
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzi
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_REQUEST_COMPLETED_US_FIELD_NUMBER
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_RESPONSE_INITIATED_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzj: long zzav
com.google.android.gms.internal.measurement.zzfi$zzf: int zze
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy cpuGaugeCollector
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzbh
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.android.gms.internal.measurement.zzfi$zzj: int zzay
com.google.firebase.perf.v1.NetworkRequestMetric: int httpResponseCode_
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.google.android.gms.internal.measurement.zzfi$zzj: long zzn
com.google.firebase.perf.v1.TransportInfo: int dispatchDestination_
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar$Companion Companion
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzfc$zzd zzc
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzjf zzg
com.google.android.gms.internal.measurement.zzew$zzc: boolean zzh
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Internal$ProtobufList perfSessions_
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzjf zzf
com.google.android.gms.internal.measurement.zzew$zze: boolean zzj
com.google.android.gms.internal.measurement.zzfi$zzj: int zzac
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.firebase.perf.v1.TraceMetric: java.lang.String name_
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzfi$zzl zzc
com.google.firebase.perf.v1.GaugeMetadata: int PROCESS_NAME_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfc$zzc: boolean zzh
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
com.google.firebase.perf.v1.ApplicationInfo: int bitField0_
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzjf zzh
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzjf zzk
com.google.android.gms.internal.measurement.zzfc$zzb: com.google.android.gms.internal.measurement.zzjf zzg
com.google.android.gms.internal.measurement.zzfc$zza$zzb: int zzf
com.google.firebase.perf.v1.PerfSession: java.lang.String sessionId_
com.google.android.gms.internal.measurement.zzfi$zzg: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzax
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzbi
com.google.android.gms.internal.measurement.zzfc$zza$zzc: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfi$zzh: com.google.android.gms.internal.measurement.zzfi$zzh zzc
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.google.firebase.perf.application.AppStateUpdateHandler: boolean isRegisteredForAppState
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.logging.AndroidLogger logger
com.google.firebase.perf.v1.PerfMetric: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.firebase.perf.v1.TraceMetric: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
androidx.window.core.Bounds: int top
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.android.gms.internal.measurement.zzfc$zza: boolean zzi
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.measurement.zzfp$zzd: com.google.android.gms.internal.measurement.zzjf zzg
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToRequestCompletedUs_
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.google.firebase.perf.v1.GaugeMetadata: int CPU_PROCESSOR_COUNT_FIELD_NUMBER
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.google.android.gms.internal.measurement.zzfi$zze: com.google.android.gms.internal.measurement.zzjf zzf
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.android.gms.internal.measurement.zzew$zzc: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzjf zzi
com.google.firebase.perf.v1.TraceMetric: boolean isAuto_
com.google.android.gms.internal.measurement.zzix: int zzd
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.android.gms.internal.measurement.zzew$zzd: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.android.gms.internal.measurement.zzew$zzf: int zzf
com.google.firebase.perf.v1.AndroidApplicationInfo: int SDK_VERSION_FIELD_NUMBER
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzfi$zzn: long zzi
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.google.android.gms.internal.measurement.zzew$zzb: boolean zzk
com.google.firebase.perf.v1.AndroidMemoryReading: com.google.protobuf.Parser PARSER
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfi$zzm: com.google.android.gms.internal.measurement.zzfi$zzm zzc
com.google.android.gms.internal.measurement.zzfp$zzd: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.measurement.zzfc$zzg: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzah
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String versionName_
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.google.android.gms.internal.measurement.zzfi$zzd: com.google.android.gms.internal.measurement.zzfi$zzd zzc
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzbm
com.google.android.gms.internal.measurement.zzfp$zzb: com.google.android.gms.internal.measurement.zzkw zzd
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.config.ConfigResolver configResolver
com.google.firebase.perf.session.gauges.GaugeManager: long APPROX_NUMBER_OF_DATA_POINTS_PER_GAUGE_METRIC
com.google.firebase.perf.v1.ApplicationInfo: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzbk
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.google.android.gms.internal.measurement.zzfi$zzj: int zzai
com.google.firebase.perf.v1.NetworkRequestMetric: long responsePayloadBytes_
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.firebase.perf.v1.PerfSession: int bitField0_
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzbb
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfi$zzh: int zze
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
com.google.firebase.perf.v1.ApplicationInfo: com.google.protobuf.Parser PARSER
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.inject.Provider firebaseRemoteConfigProvider
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzl
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzfc$zzd: int zzh
com.google.android.gms.internal.measurement.zzfi$zzf: com.google.android.gms.internal.measurement.zzfi$zzf zzc
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.firebase.perf.v1.GaugeMetadata: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfp$zzc: com.google.android.gms.internal.measurement.zzfp$zza zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.gms.internal.measurement.zzfi$zzj: boolean zzbj
com.google.android.gms.internal.measurement.zzew$zzb: boolean zzi
com.google.firebase.perf.FirebasePerfRegistrar: java.lang.String EARLY_LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzfc$zza zzc
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzk
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
com.google.firebase.perf.v1.CpuMetricReading: com.google.firebase.perf.v1.CpuMetricReading DEFAULT_INSTANCE
com.google.firebase.perf.session.PerfSession: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzq
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
com.google.android.gms.internal.measurement.zzew$zzf: java.lang.String zzg
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.google.firebase.perf.v1.TransportInfo: int DISPATCH_DESTINATION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zze: int zze
androidx.window.R$id: int locale
com.google.firebase.perf.v1.AndroidMemoryReading: int USED_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfp$zza: com.google.android.gms.internal.measurement.zzjf zze
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzad
com.google.android.gms.internal.measurement.zzfi$zzj: int zzaq
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzjf zzg
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfc$zza$zzc: int zzg
com.google.android.gms.internal.measurement.zzew$zzd: java.lang.String zzj
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.google.android.gms.internal.measurement.zzfc$zzd: int zze
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.firebase.perf.metrics.Counter: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfi$zzm: com.google.android.gms.internal.measurement.zzkw zzd
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
com.google.android.gms.internal.measurement.zzfi$zze: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfi$zzf: java.lang.String zzf
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.MapFieldLite customAttributes_
com.google.android.gms.internal.measurement.zzew$zze: boolean zzi
com.google.firebase.perf.v1.AndroidApplicationInfo: com.google.firebase.perf.v1.AndroidApplicationInfo DEFAULT_INSTANCE
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.firebase.perf.application.AppStateUpdateHandler: java.lang.ref.WeakReference appStateCallback
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.google.android.gms.internal.measurement.zzew$zzb: int zze
androidx.window.R$attr: int secondaryActivityAction
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.android.gms.internal.measurement.zzfc$zze: com.google.android.gms.internal.measurement.zzkw zzd
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firebase.perf.util.Timer: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzq
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzjf zzi
com.google.android.gms.measurement.internal.zzam: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.firebase.perf.v1.GaugeMetadata: int deviceRamSizeKb_
com.google.firebase.perf.v1.GaugeMetric: com.google.firebase.perf.v1.GaugeMetric DEFAULT_INSTANCE
androidx.window.core.Bounds: int right
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
com.google.firebase.perf.v1.AndroidApplicationInfo: int bitField0_
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.firebase.perf.config.RemoteConfigManager: long appStartTimeInMs
androidx.window.embedding.ActivityRule: java.util.Set filters
com.google.android.gms.measurement.internal.zzmh: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
kotlin.jvm.internal.FunctionReference: int flags
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzal
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
kotlin.jvm.internal.Lambda: int arity
com.google.android.gms.internal.measurement.zzfi$zzb: boolean zzl
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.google.firebase.perf.session.SessionManager: java.util.Set clients
com.google.android.gms.internal.measurement.zzfp$zzd: boolean zzj
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.android.gms.internal.measurement.zzfi$zzc: com.google.android.gms.internal.measurement.zzfi$zzl zzg
com.google.firebase.perf.v1.NetworkRequestMetric: int URL_FIELD_NUMBER
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzs
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzar
com.google.android.gms.internal.measurement.zzew$zzd: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzt
com.google.firebase.perf.v1.TraceMetric: long durationUs_
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.transport.TransportManager transportManager
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzfi$zzb zzbn
com.google.android.gms.internal.measurement.zzew$zzb: java.lang.String zzg
com.google.firebase.perf.v1.GaugeMetric: int bitField0_
com.google.android.gms.internal.measurement.zzfi$zzj: long zzbg
com.google.android.gms.internal.measurement.zzfp$zzd: int zzf
com.google.firebase.perf.v1.NetworkRequestMetric: int httpMethod_
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzj
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzaa
com.google.android.gms.internal.measurement.zzfc$zzc: java.lang.String zzf
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.google.firebase.perf.v1.TransportInfo: int bitField0_
com.google.android.gms.internal.measurement.zzfc$zzc: boolean zzg
com.google.firebase.perf.v1.GaugeMetric: int ANDROID_MEMORY_READINGS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzm: int zzf
com.google.firebase.perf.v1.TransportInfo: com.google.firebase.perf.v1.TransportInfo DEFAULT_INSTANCE
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.measurement.zzew$zzc: com.google.android.gms.internal.measurement.zzew$zzf zzf
com.google.android.gms.internal.measurement.zzfi$zzg: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfi$zzj: long zzau
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.google.firebase.perf.v1.TraceMetric: int PERF_SESSIONS_FIELD_NUMBER
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.firebase.perf.v1.CpuMetricReading: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfc$zze: int zzf
com.google.android.gms.internal.measurement.zzfi$zza: int zze
com.google.firebase.perf.v1.ApplicationInfo: java.lang.String googleAppId_
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzr
com.google.android.gms.internal.measurement.zzfi$zze: com.google.android.gms.internal.measurement.zzfi$zze zzc
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Internal$ProtobufList cpuMetricReadings_
com.google.android.gms.internal.measurement.zzfi$zza: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.firebase.perf.v1.GaugeMetadata: int cpuProcessorCount_
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.window.embedding.SplitRule: int minWidth
com.google.android.gms.internal.measurement.zzew$zzc: java.lang.String zzi
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.window.embedding.SplitRule: float splitRatio
com.google.firebase.perf.v1.NetworkRequestMetric: int REQUEST_PAYLOAD_BYTES_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzew$zza: boolean zzj
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
androidx.window.R$id: int ltr
com.google.firebase.perf.v1.NetworkRequestMetric: int bitField0_
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.firebase.perf.v1.PerfMetric: int bitField0_
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.google.android.gms.internal.measurement.zzfc$zza$zzb: com.google.android.gms.internal.measurement.zzkw zzd
com.google.android.gms.internal.measurement.zzfc$zza$zzf: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.R$attr: int finishSecondaryWithPrimary
io.flutter.embedding.engine.FlutterOverlaySurface: int id
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.firebase.perf.v1.GaugeMetadata: com.google.firebase.perf.v1.GaugeMetadata DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfc$zza$zzc: int zze
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.measurement.zzfi$zzm: int zze
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzg
com.google.firebase.perf.v1.ApplicationInfo: int ANDROID_APP_INFO_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfp$zzd: int zze
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzew$zzb: boolean zzm
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
com.google.firebase.perf.config.RemoteConfigManager: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzfc$zza$zzf: java.lang.String zzf
com.google.firebase.perf.v1.ApplicationInfo: com.google.firebase.perf.v1.AndroidApplicationInfo androidAppInfo_
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzfi$zzn: float zzj
com.google.firebase.perf.v1.GaugeMetric: java.lang.String sessionId_
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseApp
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.gms.internal.measurement.zzfc$zza$zzc: int zzf
androidx.window.R$styleable: int[] SplitPairFilter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.firebase.perf.v1.PerfMetric: int APPLICATION_INFO_FIELD_NUMBER
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.google.firebase.perf.config.RemoteConfigManager: long appStartConfigFetchDelayInMs
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified blockingDispatcher
com.google.firebase.abt.component.AbtRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: int patch
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.R$attr: int activityAction
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.android.gms.internal.measurement.zzfi$zzc: int zze
com.google.android.gms.internal.measurement.zzfi$zzk: com.google.android.gms.internal.measurement.zzkw zzd
com.google.firebase.perf.v1.AndroidMemoryReading: com.google.firebase.perf.v1.AndroidMemoryReading DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzew$zza: int zze
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.android.gms.internal.measurement.zzfi$zzd: int zzf
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.google.android.gms.internal.measurement.zzfi$zza: com.google.android.gms.internal.measurement.zzfi$zza zzc
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.google.firebase.perf.v1.GaugeMetadata: int MAX_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfi$zzn: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfc$zza$zzf: java.lang.String zzg
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.measurement.internal.zznc: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.v1.PerfSession: com.google.firebase.perf.v1.PerfSession DEFAULT_INSTANCE
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
kotlin.jvm.internal.FunctionReference: int arity
com.google.android.gms.internal.measurement.zzew$zzf: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfp$zzb: com.google.android.gms.internal.measurement.zzjf zzg
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.google.android.gms.internal.measurement.zzfi$zzj: int zzbl
com.google.android.gms.internal.measurement.zzfi$zzn: com.google.android.gms.internal.measurement.zzfi$zzn zzc
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.gms.internal.measurement.zzfi$zzn: long zzf
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzbd
com.google.android.gms.internal.measurement.zzew$zze: int zzf
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.android.gms.internal.measurement.zzfc$zza: com.google.android.gms.internal.measurement.zzjf zzh
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.android.gms.internal.measurement.zzfi$zzg: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfi$zzi: int zze
com.google.firebase.perf.v1.NetworkRequestMetric: int NETWORK_CLIENT_ERROR_REASON_FIELD_NUMBER
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.logging.AndroidLogger logger
com.google.firebase.perf.v1.CpuMetricReading: long systemTimeUs_
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.firebase.perf.v1.GaugeMetadata: int bitField0_
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzh
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.window.R$attr: int placeholderActivityName
com.google.android.gms.internal.measurement.zzfi$zzk: com.google.android.gms.internal.measurement.zzfi$zzk zzc
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.internal.measurement.zzfc$zza: int zze
com.google.android.gms.internal.measurement.zzew$zzb: int zzf
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.firebase.perf.v1.NetworkRequestMetric: int PERF_SESSIONS_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.firebase.perf.v1.ApplicationInfo: int applicationProcessState_
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.gms.internal.measurement.zzfc$zzb: java.lang.String zzf
com.google.firebase.perf.config.RemoteConfigManager: long TIME_AFTER_WHICH_A_FETCH_IS_CONSIDERED_STALE_MS
com.google.android.gms.internal.measurement.zzfi$zzh: com.google.android.gms.internal.measurement.zzfi$zza zzh
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.GaugeMetric gaugeMetric_
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeManager instance
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.DeviceCacheManager cache
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
androidx.window.embedding.SplitInfo: float splitRatio
com.google.android.gms.internal.measurement.zzfc$zzd: java.lang.String zzp
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.android.gms.internal.measurement.zzfi$zza: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfi$zzi: com.google.android.gms.internal.measurement.zzfi$zzi zzc
com.google.android.gms.internal.measurement.zzfi$zzk: int zzf
com.google.android.gms.internal.measurement.zzfi$zzb: com.google.android.gms.internal.measurement.zzfi$zzb zzc
com.google.android.gms.internal.measurement.zzfc$zze: int zze
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzjf zzj
com.google.firebase.perf.v1.AndroidApplicationInfo: int VERSION_NAME_FIELD_NUMBER
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.application.AppStateMonitor appStateMonitor
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzbf
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.v1.ApplicationProcessState currentAppState
com.google.firebase.perf.v1.NetworkRequestMetric: int HTTP_RESPONSE_CODE_FIELD_NUMBER
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.internal.measurement.zzfp$zzd: java.lang.String zzi
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzew$zzf: boolean zzh
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.core.Version: java.lang.String description
com.google.android.gms.internal.measurement.zzfi$zzj: long zzl
com.google.android.gms.internal.measurement.zzfi$zzj: java.lang.String zzu
com.google.firebase.perf.v1.ApplicationInfo: com.google.firebase.perf.v1.ApplicationInfo DEFAULT_INSTANCE
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfi$zzn: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfc$zzg: java.lang.String zzf
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
com.google.firebase.perf.v1.TransportInfo: com.google.protobuf.Parser PARSER
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.android.gms.internal.measurement.zzfi$zzj: int zze
com.google.firebase.perf.session.gauges.GaugeManager: long TIME_TO_WAIT_BEFORE_FLUSHING_GAUGES_QUEUE_MS
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.firebase.perf.session.SessionManager: java.util.concurrent.Future syncInitFuture
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzjf zzbe
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzfc$zze zzu
com.google.android.gms.internal.measurement.zzfi$zzl: com.google.android.gms.internal.measurement.zzkw zzd
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Internal$ListAdapter$Converter sessionVerbosity_converter_
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.android.gms.internal.measurement.zzfi$zzj: com.google.android.gms.internal.measurement.zzfi$zzk zzas
com.google.android.gms.internal.measurement.zzfi$zzk: int zze
com.google.android.gms.internal.measurement.zzfc$zzd: com.google.android.gms.internal.measurement.zzjf zzn
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.google.android.gms.internal.measurement.zzfi$zzj: int zzf
kotlinx.coroutines.channels.BufferedChannel: long receivers
com.google.firebase.perf.v1.GaugeMetadata: int MAX_ENCOURAGED_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
com.google.firebase.perf.v1.GaugeMetadata: int cpuClockRateKhz_
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToResponseInitiatedUs_
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseInstallationsApi
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.android.gms.internal.measurement.zzew$zzb: com.google.android.gms.internal.measurement.zzkw zzd
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.gauges.GaugeManager gaugeManager
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.firebase.perf.v1.NetworkRequestMetric: int networkClientErrorReason_
com.google.firebase.perf.v1.TraceMetric: com.google.firebase.perf.v1.TraceMetric DEFAULT_INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.firebase.perf.util.StorageUnit: com.google.firebase.perf.util.StorageUnit[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void setImeVisibleListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor: com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor valueOf(java.lang.String)
com.google.firebase.abt.component.AbtRegistrar: AbtRegistrar()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.firebase.perf.metrics.Trace: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzir: com.google.android.gms.internal.measurement.zzir[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
kotlin.jvm.internal.Lambda: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
androidx.window.core.Bounds: boolean isZero()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.firebase.perf.config.RemoteConfigManager: int getVersionCode(android.content.Context)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.plugins.firebase.crashlytics.FlutterError: FlutterError(java.lang.String)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionLifecycleServiceBinder getComponents$lambda-5(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.measurement.zzbx: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcv)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnStartTime(java.lang.String)
com.google.firebase.perf.v1.ApplicationProcessState: com.google.firebase.perf.v1.ApplicationProcessState valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.google.firebase.perf.session.gauges.GaugeManager: GaugeManager()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.remoteconfig.FirebaseRemoteConfigValue getRemoteConfigValue(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar: java.util.List getComponents()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcv,long)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfk: com.google.android.gms.internal.measurement.zzfk[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessions getComponents$lambda-0(com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzjz getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.google.firebase.perf.config.RemoteConfigManager: void syncConfigValues(java.util.Map)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.google.firebase.perf.FirebasePerfKtxRegistrar: java.util.List getComponents()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdd,long)
com.google.android.gms.measurement.internal.zzih$zza: com.google.android.gms.measurement.internal.zzih$zza[] values()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzda)
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: FirebaseCrashlyticsKtxRegistrar()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.firebase.perf.FirebasePerfRegistrar: com.google.firebase.perf.FirebasePerfEarly lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.io.InputStream openStream(java.net.URL)
com.google.firebase.perf.session.SessionManager: void logGaugeMetadataIfCollectionEnabled(com.google.firebase.perf.v1.ApplicationProcessState)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
com.google.android.gms.internal.measurement.zzmn: com.google.android.gms.internal.measurement.zzmn[] values()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.window.R$styleable: R$styleable()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
com.google.firebase.perf.metrics.Trace: java.util.Map getAttributes()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.internal.measurement.zzct: com.google.android.gms.internal.measurement.zzcu asInterface(android.os.IBinder)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.firebase.perf.metrics.Trace: void incrementMetric(java.lang.String,long)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.gms.measurement.internal.zzaj: com.google.android.gms.measurement.internal.zzaj[] values()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.v1.ApplicationProcessState getAppState()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
com.google.firebase.perf.session.SessionManager: void initializeGaugeCollection()
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.SessionManager getInstance()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionGenerator getComponents$lambda-1(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.core.Bounds: int getLeft()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.window.R$attr: R$attr()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.google.android.gms.measurement.internal.zzig: com.google.android.gms.measurement.internal.zzig[] values()
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.firebase.perf.application.AppStateUpdateHandler: void unregisterForAppState()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.firebase.perf.session.gauges.GaugeManager: void collectGaugeMetricOnce(com.google.firebase.perf.util.Timer)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.google.firebase.perf.session.SessionManager: void updatePerfSession(com.google.firebase.perf.session.PerfSession)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.firebase.perf.session.gauges.GaugeManager: void stopCollectingGauges()
androidx.window.embedding.SplitController: SplitController()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
com.google.firebase.perf.config.RemoteConfigManager: java.lang.Object getRemoteConfigValueOrDefault(java.lang.String,java.lang.Object)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
com.google.android.gms.internal.measurement.zzfc$zza$zze: com.google.android.gms.internal.measurement.zzfc$zza$zze[] values()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcv)
androidx.window.core.Version: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.embedding.SplitController: void clearRegisteredRules()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.core.Bounds: int getBottom()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.firebase.abt.component.AbtRegistrar: com.google.firebase.abt.component.AbtComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
com.google.firebase.perf.application.AppStateUpdateHandler: void registerForAppState()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.R: R()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzda)
com.google.android.gms.internal.measurement.zzbx: android.os.IBinder asBinder()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.firebase.perf.config.RemoteConfigManager: long getCurrentSystemTimeMillis()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.firebase.perf.session.SessionManager: void setApplicationContext(android.content.Context)
dev.fluttercommunity.plus.share.ShareFileProvider: ShareFileProvider()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.firebase.perf.util.Constants$CounterNames: com.google.firebase.perf.util.Constants$CounterNames valueOf(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.firebase.perf.session.gauges.GaugeManager: void startCollectingGauges(com.google.firebase.perf.session.PerfSession,com.google.firebase.perf.v1.ApplicationProcessState)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.firebase.perf.config.RemoteConfigManager: RemoteConfigManager()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.core.Version: int getPatch()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.firebase.perf.network.FirebasePerfOkHttpClient: okhttp3.Response execute(okhttp3.Call)
com.google.firebase.perf.session.SessionManager: SessionManager(com.google.firebase.perf.session.gauges.GaugeManager,com.google.firebase.perf.session.PerfSession,com.google.firebase.perf.application.AppStateMonitor)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
com.google.firebase.perf.config.RemoteConfigManager: boolean shouldFetchAndActivateRemoteConfigValues()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
io.flutter.embedding.engine.FlutterJNI: void SetIsRenderingToImageView(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.v1.GaugeMetadata getGaugeMetadata()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.perf.session.SessionManager: SessionManager()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.flutter.view.TextureRegistry$ImageTextureEntry: android.media.Image acquireLatestImage()
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object instrument(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcv)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.window.core.Bounds: int getWidth()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.firebase.remoteconfig.RemoteConfigRegistrar: RemoteConfigRegistrar()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcv)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture valueOf(java.lang.String)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getBoolean(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzda)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.perf.config.RemoteConfigManager: boolean hasAppStartConfigFetchDelayElapsed(long)
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.core.Version: int getMajor()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.firebase.perf.session.gauges.GaugeManager: long startCollectingGauges(com.google.firebase.perf.v1.ApplicationProcessState,com.google.firebase.perf.util.Timer)
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcv,long)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.settings.SessionsSettings getComponents$lambda-3(com.google.firebase.components.ComponentContainer)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
com.google.firebase.perf.session.gauges.GaugeManager: boolean startCollectingCpuMetrics(long,com.google.firebase.perf.util.Timer)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.gms.internal.measurement.zzew$zzf$zza: com.google.android.gms.internal.measurement.zzew$zzf$zza[] values()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar: java.util.List getComponents()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.internal.measurement.zzjk: com.google.android.gms.internal.measurement.zzjk[] values()
dev.fluttercommunity.plus.share.SharePlusPendingIntent: SharePlusPendingIntent()
com.google.android.gms.internal.measurement.zzky: com.google.android.gms.internal.measurement.zzky[] values()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzew$zzd$zzb: com.google.android.gms.internal.measurement.zzew$zzd$zzb[] values()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.google.firebase.perf.session.gauges.GaugeManager: void lambda$stopCollectingGauges$3(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
androidx.window.core.Version$Companion: Version$Companion()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.firebase.sessions.FirebaseSessionsRegistrar: FirebaseSessionsRegistrar()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod: com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.google.firebase.perf.util.StorageUnit: com.google.firebase.perf.util.StorageUnit valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.firebase.perf.session.gauges.GaugeManager: void lambda$startCollectingGauges$2(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor: com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor[] values()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.firebase.perf.v1.SessionVerbosity: com.google.firebase.perf.v1.SessionVerbosity valueOf(java.lang.String)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcv)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.firebase.perf.metrics.Trace: void start()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: FirebaseCrashlyticsKtxRegistrar()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState valueOf(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageTextureEntry)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcv)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcv,long)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.example.dawn.MainActivity: MainActivity()
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.window.core.Bounds: int hashCode()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.firebase.perf.metrics.AppStartTrace: void onAppEnteredBackground()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.core.Bounds: int getRight()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.MemoryGaugeCollector lambda$new$1()
com.google.firebase.perf.session.gauges.GaugeManager: boolean logGaugeMetadata(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
com.google.android.gms.internal.measurement.zzmx: com.google.android.gms.internal.measurement.zzmx[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.window.core.Bounds: boolean isEmpty()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior valueOf(java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri,android.view.InputEvent)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.firebase.perf.metrics.Trace: void stop()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
com.google.firebase.perf.metrics.AppStartTrace: void onAppEnteredForeground()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.firebase.perf.config.RemoteConfigManager: long getInitialStartupMillis()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.firebase.perf.v1.ApplicationProcessState: com.google.firebase.perf.v1.ApplicationProcessState[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
androidx.window.core.Version: java.lang.String getDescription()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.window.java.R: R()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.google.android.gms.internal.measurement.zzfc$zza$zzd: com.google.android.gms.internal.measurement.zzfc$zza$zzd[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.firebase.perf.util.Constants$CounterNames: com.google.firebase.perf.util.Constants$CounterNames[] values()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values()
com.google.firebase.perf.config.RemoteConfigManager: void setFirebaseRemoteConfigProvider(com.google.firebase.inject.Provider)
com.google.firebase.perf.config.RemoteConfigManager: RemoteConfigManager(com.google.firebase.perf.config.DeviceCacheManager,java.util.concurrent.Executor,com.google.firebase.remoteconfig.FirebaseRemoteConfig,long,long)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnResumeTime(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState[] values()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.google.firebase.remoteconfig.RemoteConfigRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitRule: int hashCode()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.google.firebase.perf.session.SessionManager: void lambda$setApplicationContext$0(android.content.Context,com.google.firebase.perf.session.PerfSession)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment[] values()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture[] values()
com.google.firebase.perf.session.SessionManager: void startOrStopCollectingGauges(com.google.firebase.perf.v1.ApplicationProcessState)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.gms.internal.measurement.zzit: com.google.android.gms.internal.measurement.zzit[] values()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchResponse fetch(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.util.Map,java.lang.Long,java.util.Date)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcv)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
kotlin.random.Random: Random()
com.google.firebase.perf.session.gauges.GaugeManager: void collectGaugeMetricOnce(com.google.firebase.perf.session.gauges.CpuGaugeCollector,com.google.firebase.perf.session.gauges.MemoryGaugeCollector,com.google.firebase.perf.util.Timer)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.google.firebase.perf.application.AppStateUpdateHandler: java.lang.ref.WeakReference getAppStateCallback()
com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason: com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.firebase.crashlytics.CrashlyticsRegistrar: CrashlyticsRegistrar()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.google.firebase.perf.metrics.Trace: void putAttribute(java.lang.String,java.lang.String)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firebase.perf.session.gauges.GaugeManager: long getCpuGaugeCollectionFrequencyMs(com.google.firebase.perf.v1.ApplicationProcessState)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.firebase.perf.v1.TransportInfo$DispatchDestination: com.google.firebase.perf.v1.TransportInfo$DispatchDestination valueOf(java.lang.String)
androidx.window.layout.WindowMetrics: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setInputType(int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.layout.WindowMetrics: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.firebase.perf.util.Constants$TraceNames: com.google.firebase.perf.util.Constants$TraceNames[] values()
androidx.window.embedding.ActivityRule: int hashCode()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.google.firebase.perf.session.SessionManager: void registerForSessionUpdates(java.lang.ref.WeakReference)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.window.core.Version: int getMinor()
com.google.firebase.perf.config.RemoteConfigManager: void lambda$triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch$1(java.lang.Exception)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.google.firebase.perf.session.SessionManager: void onUpdateAppState(com.google.firebase.perf.v1.ApplicationProcessState)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getDouble(java.lang.String)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.google.firebase.perf.session.gauges.GaugeManager: boolean startCollectingMemoryMetrics(long,com.google.firebase.perf.util.Timer)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.window.core.Version: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.firebase.perf.session.SessionManager: void unregisterForSessionUpdates(java.lang.ref.WeakReference)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
com.google.firebase.perf.config.RemoteConfigManager: void lambda$triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch$0(java.lang.Boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.privacysandbox.ads.adservices.internal.AdServicesInfo$Extensions30Impl: int getAdServicesVersion()
com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType[] values()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcv)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.embedding.engine.FlutterJNI: void nativeSetIsRenderingToImageView(long,boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.abt.component.AbtRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.google.firebase.perf.v1.SessionVerbosity: com.google.firebase.perf.v1.SessionVerbosity[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod: com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod valueOf(java.lang.String)
androidx.window.core.Bounds: int getTop()
io.flutter.app.FlutterMultiDexApplication: FlutterMultiDexApplication()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.window.core.Bounds: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.google.firebase.perf.session.SessionManager: void setPerfSession(com.google.firebase.perf.session.PerfSession)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.window.embedding.SplitRule: SplitRule()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.firebase.perf.session.SessionManager: void stopGaugeCollectionIfSessionRunningTooLong()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.firebase.perf.config.RemoteConfigManager: void triggerRemoteConfigFetchIfNecessary()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.firebase.perf.config.RemoteConfigManager: boolean isLastFetchFailed()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcv)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.firebase.perf.session.gauges.GaugeManager: void syncFlush(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
com.google.firebase.perf.session.gauges.GaugeManager: void initializeGaugeMetadataManager(android.content.Context)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzdb)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcv)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.window.core.Version: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.firebase.remoteconfig.RemoteConfigRegistrar: com.google.firebase.remoteconfig.RemoteConfigComponent lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar: FirebaseRemoteConfigKtxRegistrar()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcv,int)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnCreateTime(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.PerfSession perfSession()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.firebase.perf.metrics.Trace: void putMetric(java.lang.String,long)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar: java.util.List getComponents()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionDatastore getComponents$lambda-4(com.google.firebase.components.ComponentContainer)
com.google.firebase.perf.session.gauges.GaugeManager: GaugeManager(com.google.firebase.components.Lazy,com.google.firebase.perf.transport.TransportManager,com.google.firebase.perf.config.ConfigResolver,com.google.firebase.perf.session.gauges.GaugeMetadataManager,com.google.firebase.components.Lazy,com.google.firebase.components.Lazy)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType[] values()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
com.google.firebase.perf.config.RemoteConfigManager: boolean hasLastFetchBecomeStale(long)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.firebase.perf.FirebasePerfKtxRegistrar: FirebasePerfKtxRegistrar()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
kotlin.collections.AbstractList: AbstractList()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getString(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.firebase.perf.FirebasePerfRegistrar: FirebasePerfRegistrar()
com.google.common.collect.BaseImmutableMultimap: BaseImmutableMultimap()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzfp$zzd$zzb: com.google.android.gms.internal.measurement.zzfp$zzd$zzb[] values()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.firebase.perf.metrics.Trace: java.lang.String getAttribute(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
com.google.firebase.perf.metrics.Trace: int describeContents()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash: FirebaseCrashlyticsTestCrash()
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.RemoteConfigManager getInstance()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.window.embedding.SplitInfo: int hashCode()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
com.google.firebase.sessions.SessionLifecycleService: SessionLifecycleService()
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code: com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code valueOf(java.lang.String)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcv)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.CpuGaugeCollector lambda$new$0()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism[] values()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar: FirebaseRemoteConfigKtxRegistrar()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.perf.config.RemoteConfigManager: boolean isFirebaseRemoteConfigAvailable()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzs: com.google.android.gms.internal.measurement.zzs[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionFirelogPublisher getComponents$lambda-2(com.google.firebase.components.ComponentContainer)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.google.firebase.perf.config.RemoteConfigManager: void triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.core.Bounds: int getHeight()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.window.core.Bounds: Bounds(int,int,int,int)
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeManager getInstance()
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object getContent(java.net.URL)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getLong(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.firebase.perf.metrics.Trace: void removeAttribute(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.firebase.perf.metrics.Trace: long getLongMetric(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.google.firebase.perf.session.SessionManager: java.util.concurrent.Future getSyncInitFuture()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener getImeVisibleListener()
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.util.List getComponents()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.android.gms.internal.measurement.zzfi$zzk$zza: com.google.android.gms.internal.measurement.zzfi$zzk$zza[] values()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.perf.session.gauges.GaugeManager: long getMemoryGaugeCollectionFrequencyMs(com.google.firebase.perf.v1.ApplicationProcessState)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
com.google.firebase.perf.FirebasePerfRegistrar: com.google.firebase.perf.FirebasePerformance providesFirebasePerformance(com.google.firebase.components.ComponentContainer)
androidx.window.embedding.SplitRule: int getMinWidth()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar: FirebasePerfKtxRegistrar()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
kotlin.jvm.internal.CallableReference: boolean isFinal()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code: com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code[] values()
com.google.firebase.perf.util.Constants$TraceNames: com.google.firebase.perf.util.Constants$TraceNames valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.google.firebase.perf.network.FirebasePerfOkHttpClient: void enqueue(okhttp3.Call,okhttp3.Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.common.collect.Ordering: Ordering()
androidx.window.embedding.ActivityStack: int hashCode()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object getContent(java.net.URL,java.lang.Class[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
com.google.firebase.perf.v1.TransportInfo$DispatchDestination: com.google.firebase.perf.v1.TransportInfo$DispatchDestination[] values()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason: com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.window.R$id: R$id()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.google.firebase.perf.FirebasePerfRegistrar: java.util.List getComponents()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.firebase.perf.application.AppStateUpdateHandler: void incrementTsnsCount(int)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
